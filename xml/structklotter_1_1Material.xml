<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="structklotter_1_1Material" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>klotter::Material</compoundname>
    <derivedcompoundref refid="structklotter_1_1DefaultMaterial" prot="public" virt="non-virtual">klotter::DefaultMaterial</derivedcompoundref>
    <derivedcompoundref refid="structklotter_1_1UnlitMaterial" prot="public" virt="non-virtual">klotter::UnlitMaterial</derivedcompoundref>
    <includes refid="material_8h" local="no">material.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structklotter_1_1Material_1a24140b226196668917743a48c1d5361b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>klotter::Material::Material</definition>
        <argsstring>()=default</argsstring>
        <name>Material</name>
        <qualifiedname>klotter::Material::Material</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/material.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Material_1abd64872e3d2303186c0a9b5e978e0cd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual klotter::Material::~Material</definition>
        <argsstring>()=default</argsstring>
        <name>~Material</name>
        <qualifiedname>klotter::Material::~Material</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/material.h" line="31" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Material_1ace5e0bd7d0fc1daad0f181dc42dfa6af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>klotter::Material::Material</definition>
        <argsstring>(const Material &amp;)=delete</argsstring>
        <name>Material</name>
        <qualifiedname>klotter::Material::Material</qualifiedname>
        <param>
          <type>const <ref refid="structklotter_1_1Material" kindref="compound">Material</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/material.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Material_1a9775d81964f25d6af45a2a91b46a548f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>klotter::Material::Material</definition>
        <argsstring>(Material &amp;&amp;)=delete</argsstring>
        <name>Material</name>
        <qualifiedname>klotter::Material::Material</qualifiedname>
        <param>
          <type><ref refid="structklotter_1_1Material" kindref="compound">Material</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/material.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Material_1ae6b0e38e5f74eddf5abf05563946719b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void klotter::Material::operator=</definition>
        <argsstring>(const Material &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>klotter::Material::operator=</qualifiedname>
        <param>
          <type>const <ref refid="structklotter_1_1Material" kindref="compound">Material</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/material.h" line="35" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Material_1af6386229d9bf2a00f8d43173388a11a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void klotter::Material::operator=</definition>
        <argsstring>(Material &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>klotter::Material::operator=</qualifiedname>
        <param>
          <type><ref refid="structklotter_1_1Material" kindref="compound">Material</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/material.h" line="36" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Material_1acc7a0623867b0770e101cdcca4c294ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void klotter::Material::use_shader</definition>
        <argsstring>(const RenderContext &amp;)=0</argsstring>
        <name>use_shader</name>
        <qualifiedname>klotter::Material::use_shader</qualifiedname>
        <reimplementedby refid="structklotter_1_1DefaultMaterial_1afcb65bb4df7f01d99dc756c3a7aecbb1">use_shader</reimplementedby>
        <reimplementedby refid="structklotter_1_1UnlitMaterial_1a24a10994b33c725dc865ac96d8a6bdc8">use_shader</reimplementedby>
        <param>
          <type>const <ref refid="structklotter_1_1RenderContext" kindref="compound">RenderContext</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/material.h" line="38" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Material_1aefed8390f6292db10e329947cbfc8927" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void klotter::Material::set_uniforms</definition>
        <argsstring>(const RenderContext &amp;, const CompiledCamera &amp;, const std::optional&lt; glm::mat4 &gt; &amp;)=0</argsstring>
        <name>set_uniforms</name>
        <qualifiedname>klotter::Material::set_uniforms</qualifiedname>
        <reimplementedby refid="structklotter_1_1DefaultMaterial_1a0e86acb1ff001c929d35a5654e667259">set_uniforms</reimplementedby>
        <reimplementedby refid="structklotter_1_1UnlitMaterial_1a943b628224cf9d4eab243c7a344961a1">set_uniforms</reimplementedby>
        <param>
          <type>const <ref refid="structklotter_1_1RenderContext" kindref="compound">RenderContext</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structklotter_1_1CompiledCamera" kindref="compound">CompiledCamera</ref> &amp;</type>
        </param>
        <param>
          <type>const std::optional&lt; glm::mat4 &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/material.h" line="39" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Material_1ad85a4d46e7cef0f29370c1c70db495be" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void klotter::Material::bind_textures</definition>
        <argsstring>(const RenderContext &amp;, OpenglStates *states, Assets *assets)=0</argsstring>
        <name>bind_textures</name>
        <qualifiedname>klotter::Material::bind_textures</qualifiedname>
        <reimplementedby refid="structklotter_1_1DefaultMaterial_1ad2b6a047d7b0440e03426f2fd5561f0b">bind_textures</reimplementedby>
        <reimplementedby refid="structklotter_1_1UnlitMaterial_1a4a647c9b677bbb4ee9a36333eb42cc8c">bind_textures</reimplementedby>
        <param>
          <type>const <ref refid="structklotter_1_1RenderContext" kindref="compound">RenderContext</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structklotter_1_1OpenglStates" kindref="compound">OpenglStates</ref> *</type>
          <declname>states</declname>
        </param>
        <param>
          <type><ref refid="structklotter_1_1Assets" kindref="compound">Assets</ref> *</type>
          <declname>assets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/material.h" line="40" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Material_1a54c02acb7ce2d5c1ab8637a819a52d76" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void klotter::Material::apply_lights</definition>
        <argsstring>(const RenderContext &amp;, const Lights &amp;lights, const RenderSettings &amp;settings, OpenglStates *states, Assets *assets)=0</argsstring>
        <name>apply_lights</name>
        <qualifiedname>klotter::Material::apply_lights</qualifiedname>
        <reimplementedby refid="structklotter_1_1DefaultMaterial_1a07358b6eb7c2082fc2b93ab146d4f64f">apply_lights</reimplementedby>
        <reimplementedby refid="structklotter_1_1UnlitMaterial_1a08cab92f0b59a39ae2adb6cfa51ca7e1">apply_lights</reimplementedby>
        <param>
          <type>const <ref refid="structklotter_1_1RenderContext" kindref="compound">RenderContext</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structklotter_1_1Lights" kindref="compound">Lights</ref> &amp;</type>
          <declname>lights</declname>
        </param>
        <param>
          <type>const <ref refid="structklotter_1_1RenderSettings" kindref="compound">RenderSettings</ref> &amp;</type>
          <declname>settings</declname>
        </param>
        <param>
          <type><ref refid="structklotter_1_1OpenglStates" kindref="compound">OpenglStates</ref> *</type>
          <declname>states</declname>
        </param>
        <param>
          <type><ref refid="structklotter_1_1Assets" kindref="compound">Assets</ref> *</type>
          <declname>assets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/material.h" line="41" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Material_1a1bc8203ffbdf63223113a444dd1cf4a9" prot="public" static="no" nodiscard="yes" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool klotter::Material::is_transparent</definition>
        <argsstring>() const =0</argsstring>
        <name>is_transparent</name>
        <qualifiedname>klotter::Material::is_transparent</qualifiedname>
        <reimplementedby refid="structklotter_1_1DefaultMaterial_1a908a00a5227daaa63e74bc197fd6e6af">is_transparent</reimplementedby>
        <reimplementedby refid="structklotter_1_1UnlitMaterial_1a13281148f24bc55c04ba816c9aab8d1e">is_transparent</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/material.h" line="45" column="15"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Base class for all materials. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>klotter::DefaultMaterial</label>
        <link refid="structklotter_1_1DefaultMaterial"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>klotter::Material</label>
        <link refid="structklotter_1_1Material"/>
      </node>
      <node id="3">
        <label>klotter::UnlitMaterial</label>
        <link refid="structklotter_1_1UnlitMaterial"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="src/klotter/render/material.h" line="28" column="1" bodyfile="src/klotter/render/material.h" bodystart="29" bodyend="46"/>
    <listofallmembers>
      <member refid="structklotter_1_1Material_1a54c02acb7ce2d5c1ab8637a819a52d76" prot="public" virt="pure-virtual"><scope>klotter::Material</scope><name>apply_lights</name></member>
      <member refid="structklotter_1_1Material_1ad85a4d46e7cef0f29370c1c70db495be" prot="public" virt="pure-virtual"><scope>klotter::Material</scope><name>bind_textures</name></member>
      <member refid="structklotter_1_1Material_1a1bc8203ffbdf63223113a444dd1cf4a9" prot="public" virt="pure-virtual"><scope>klotter::Material</scope><name>is_transparent</name></member>
      <member refid="structklotter_1_1Material_1a24140b226196668917743a48c1d5361b" prot="public" virt="non-virtual"><scope>klotter::Material</scope><name>Material</name></member>
      <member refid="structklotter_1_1Material_1ace5e0bd7d0fc1daad0f181dc42dfa6af" prot="public" virt="non-virtual"><scope>klotter::Material</scope><name>Material</name></member>
      <member refid="structklotter_1_1Material_1a9775d81964f25d6af45a2a91b46a548f" prot="public" virt="non-virtual"><scope>klotter::Material</scope><name>Material</name></member>
      <member refid="structklotter_1_1Material_1ae6b0e38e5f74eddf5abf05563946719b" prot="public" virt="non-virtual"><scope>klotter::Material</scope><name>operator=</name></member>
      <member refid="structklotter_1_1Material_1af6386229d9bf2a00f8d43173388a11a7" prot="public" virt="non-virtual"><scope>klotter::Material</scope><name>operator=</name></member>
      <member refid="structklotter_1_1Material_1aefed8390f6292db10e329947cbfc8927" prot="public" virt="pure-virtual"><scope>klotter::Material</scope><name>set_uniforms</name></member>
      <member refid="structklotter_1_1Material_1acc7a0623867b0770e101cdcca4c294ce" prot="public" virt="pure-virtual"><scope>klotter::Material</scope><name>use_shader</name></member>
      <member refid="structklotter_1_1Material_1abd64872e3d2303186c0a9b5e978e0cd9" prot="public" virt="virtual"><scope>klotter::Material</scope><name>~Material</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
