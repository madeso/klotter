<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="structResult" kind="struct" language="C++" prot="public">
    <compoundname>Result</compoundname>
    <includes refid="result_8h" local="no">result.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename E</type>
        <defval>std::string</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structResult_1aaa4cd27503fc72bd303b8821fddb24f0" prot="public" static="no" mutable="no">
        <type>std::optional&lt; T &gt;</type>
        <definition>std::optional&lt;T&gt; Result&lt; T, E &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>Result::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/result.h" line="8" column="15" bodyfile="src/klotter/result.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structResult_1af75910267946ca1545b492ae2c9bc72e" prot="public" static="no" mutable="no">
        <type>std::optional&lt; E &gt;</type>
        <definition>std::optional&lt;E&gt; Result&lt; T, E &gt;::e</definition>
        <argsstring></argsstring>
        <name>e</name>
        <qualifiedname>Result::e</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/result.h" line="9" column="15" bodyfile="src/klotter/result.h" bodystart="9" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structResult_1a09bfef910ff61b121e04b9df35ab8a1a" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Result&lt; T, E &gt;::Result</definition>
        <argsstring>(T &amp;&amp;tt)</argsstring>
        <name>Result</name>
        <qualifiedname>Result::Result</qualifiedname>
        <param>
          <type>T &amp;&amp;</type>
          <declname>tt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/result.h" line="11" column="10" bodyfile="src/klotter/result.h" bodystart="11" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="structResult_1aef1257385182062000e093cc7979f46f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Result&lt; T, E &gt;::Result</definition>
        <argsstring>(const E &amp;ee)</argsstring>
        <name>Result</name>
        <qualifiedname>Result::Result</qualifiedname>
        <param>
          <type>const E &amp;</type>
          <declname>ee</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/result.h" line="16" column="10" bodyfile="src/klotter/result.h" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="structResult_1a9e40be74c8d6a0617c920987882b86e9" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Result&lt; T, E &gt;::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <qualifiedname>Result::operator bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/result.h" line="21" column="10" bodyfile="src/klotter/result.h" bodystart="21" bodyend="24"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/klotter/result.h" line="6" column="1" bodyfile="src/klotter/result.h" bodystart="7" bodyend="25"/>
    <listofallmembers>
      <member refid="structResult_1af75910267946ca1545b492ae2c9bc72e" prot="public" virt="non-virtual"><scope>Result</scope><name>e</name></member>
      <member refid="structResult_1a9e40be74c8d6a0617c920987882b86e9" prot="public" virt="non-virtual"><scope>Result</scope><name>operator bool</name></member>
      <member refid="structResult_1a09bfef910ff61b121e04b9df35ab8a1a" prot="public" virt="non-virtual"><scope>Result</scope><name>Result</name></member>
      <member refid="structResult_1aef1257385182062000e093cc7979f46f" prot="public" virt="non-virtual"><scope>Result</scope><name>Result</name></member>
      <member refid="structResult_1aaa4cd27503fc72bd303b8821fddb24f0" prot="public" virt="non-virtual"><scope>Result</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
