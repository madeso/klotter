<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="result_8h" kind="file" language="C++">
    <compoundname>result.h</compoundname>
    <includes local="no">optional</includes>
    <incdepgraph>
      <node id="1">
        <label>src/klotter/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>optional</label>
      </node>
    </incdepgraph>
    <innerclass refid="structResult" prot="public">Result</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>todo(Gustav):<sp/>remove<sp/>and<sp/>upgrade<sp/>to<sp/>cpp<sp/>23<sp/>that<sp/>has<sp/>improved<sp/>api<sp/>https://devblogs.microsoft.com/cppblog/cpp23s-optional-and-expected/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>E<sp/>=<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="8" refid="structResult" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structResult_1a5314b530c0634f2fc8c0c464189a5abb" kindref="member">Result</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10" refid="structResult_1aaa4cd27503fc72bd303b8821fddb24f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;T&gt;<sp/><ref refid="structResult_1aaa4cd27503fc72bd303b8821fddb24f0" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="11" refid="structResult_1af75910267946ca1545b492ae2c9bc72e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;E&gt;<sp/><ref refid="structResult_1af75910267946ca1545b492ae2c9bc72e" kindref="member">e</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="structResult_1a5314b530c0634f2fc8c0c464189a5abb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structResult_1a5314b530c0634f2fc8c0c464189a5abb" kindref="member">Result</ref>(T<sp/>tt)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structResult_1aaa4cd27503fc72bd303b8821fddb24f0" kindref="member">value</ref>(std::move(tt))</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="structResult_1aef1257385182062000e093cc7979f46f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structResult_1aef1257385182062000e093cc7979f46f" kindref="member">Result</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>E&amp;<sp/>ee)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structResult_1af75910267946ca1545b492ae2c9bc72e" kindref="member">e</ref>(ee)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="structResult_1a9e40be74c8d6a0617c920987882b86e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="24"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structResult_1aaa4cd27503fc72bd303b8821fddb24f0" kindref="member">value</ref>.has_value();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="src/klotter/result.h"/>
  </compounddef>
</doxygen>
