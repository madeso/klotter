<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="structklotter_1_1Assets" kind="struct" language="C++" prot="public">
    <compoundname>klotter::Assets</compoundname>
    <includes refid="assets_8h" local="no">assets.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structklotter_1_1Assets_1af1aff85cf9fe5add568c913256a28012" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Texture2d&gt; klotter::Assets::black</definition>
        <argsstring></argsstring>
        <name>black</name>
        <qualifiedname>klotter::Assets::black</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="30" column="17" bodyfile="src/klotter/render/assets.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structklotter_1_1Assets_1ab738060dee4ca498eecdeb4a0daa1a41" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Texture2d&gt; klotter::Assets::white</definition>
        <argsstring></argsstring>
        <name>white</name>
        <qualifiedname>klotter::Assets::white</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="31" column="17" bodyfile="src/klotter/render/assets.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structklotter_1_1Assets_1a28e98a4085b308402c00672f3d958ac7" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Texture2d&gt; klotter::Assets::cookie</definition>
        <argsstring></argsstring>
        <name>cookie</name>
        <qualifiedname>klotter::Assets::cookie</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="33" column="17" bodyfile="src/klotter/render/assets.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structklotter_1_1Assets_1a6abd2b6c2dbeeadc5dea0254da936fa1" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Texture2d&gt; klotter::Assets::dark_grid</definition>
        <argsstring></argsstring>
        <name>dark_grid</name>
        <qualifiedname>klotter::Assets::dark_grid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="34" column="17" bodyfile="src/klotter/render/assets.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structklotter_1_1Assets_1a505f267d48add62d5f7a0db879236f98" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Texture2d&gt; klotter::Assets::light_grid</definition>
        <argsstring></argsstring>
        <name>light_grid</name>
        <qualifiedname>klotter::Assets::light_grid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="35" column="17" bodyfile="src/klotter/render/assets.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structklotter_1_1Assets_1aabb46305902b797a3fd443d0c53abcc5" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Texture2d&gt; klotter::Assets::container_diffuse</definition>
        <argsstring></argsstring>
        <name>container_diffuse</name>
        <qualifiedname>klotter::Assets::container_diffuse</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="37" column="17" bodyfile="src/klotter/render/assets.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structklotter_1_1Assets_1a1cdac0d028690a6fa60012a704fca38f" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Texture2d&gt; klotter::Assets::container_specular</definition>
        <argsstring></argsstring>
        <name>container_specular</name>
        <qualifiedname>klotter::Assets::container_specular</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="38" column="17" bodyfile="src/klotter/render/assets.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structklotter_1_1Assets_1a966cd479f977e8f35f5e7e0a88a20999" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Texture2d&gt; klotter::Assets::matrix</definition>
        <argsstring></argsstring>
        <name>matrix</name>
        <qualifiedname>klotter::Assets::matrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="39" column="17" bodyfile="src/klotter/render/assets.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structklotter_1_1Assets_1a9cb22e30d9f0eb63daca4867ac554ed5" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Texture2d&gt; klotter::Assets::glass</definition>
        <argsstring></argsstring>
        <name>glass</name>
        <qualifiedname>klotter::Assets::glass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="40" column="17" bodyfile="src/klotter/render/assets.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structklotter_1_1Assets_1a07e22431e1630df85e61f594173ee8d1" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Texture2d&gt; klotter::Assets::grass</definition>
        <argsstring></argsstring>
        <name>grass</name>
        <qualifiedname>klotter::Assets::grass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="41" column="17" bodyfile="src/klotter/render/assets.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structklotter_1_1Assets_1a0115f45f0bbbeeb08a3505838c07010f" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1TextureCubemap" kindref="compound">TextureCubemap</ref> &gt;</type>
        <definition>std::shared_ptr&lt;TextureCubemap&gt; klotter::Assets::skybox</definition>
        <argsstring></argsstring>
        <name>skybox</name>
        <qualifiedname>klotter::Assets::skybox</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="42" column="17" bodyfile="src/klotter/render/assets.h" bodystart="42" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structklotter_1_1Assets_1a6112c8cd85fb6962512f579b71b81cdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Texture2d &gt; klotter::Assets::get_black</definition>
        <argsstring>()</argsstring>
        <name>get_black</name>
        <qualifiedname>klotter::Assets::get_black</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="14" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Assets_1aa72f0833340b8a6bcfee58ae038df747" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Texture2d &gt; klotter::Assets::get_white</definition>
        <argsstring>()</argsstring>
        <name>get_white</name>
        <qualifiedname>klotter::Assets::get_white</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="15" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Assets_1a5d3b80eb107e6caf5c8db1addc8a1984" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Texture2d &gt; klotter::Assets::get_cookie</definition>
        <argsstring>()</argsstring>
        <name>get_cookie</name>
        <qualifiedname>klotter::Assets::get_cookie</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="17" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Assets_1ad7d8a7897034c43e22e65c5493dd9f67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Texture2d &gt; klotter::Assets::get_dark_grid</definition>
        <argsstring>()</argsstring>
        <name>get_dark_grid</name>
        <qualifiedname>klotter::Assets::get_dark_grid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="18" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Assets_1ae7b09eec40c2d366af885019880a9537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Texture2d &gt; klotter::Assets::get_light_grid</definition>
        <argsstring>()</argsstring>
        <name>get_light_grid</name>
        <qualifiedname>klotter::Assets::get_light_grid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="19" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Assets_1a7c2001fd4b33885626d2a62ffd8b8928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Texture2d &gt; klotter::Assets::get_container_diffuse</definition>
        <argsstring>()</argsstring>
        <name>get_container_diffuse</name>
        <qualifiedname>klotter::Assets::get_container_diffuse</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="21" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Assets_1aa8a09bad37aac6b352b2152c838a8a3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Texture2d &gt; klotter::Assets::get_container_specular</definition>
        <argsstring>()</argsstring>
        <name>get_container_specular</name>
        <qualifiedname>klotter::Assets::get_container_specular</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="22" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Assets_1af788dcba6c4f2a6ab7e44c4be2dc8791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Texture2d &gt; klotter::Assets::get_matrix</definition>
        <argsstring>()</argsstring>
        <name>get_matrix</name>
        <qualifiedname>klotter::Assets::get_matrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="23" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Assets_1ae123058dd7cb18ef657cc4e6d99cae91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Texture2d &gt; klotter::Assets::get_glass</definition>
        <argsstring>()</argsstring>
        <name>get_glass</name>
        <qualifiedname>klotter::Assets::get_glass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="24" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Assets_1a20be3e80c53f4d4485176282a4d65e78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1Texture2d" kindref="compound">Texture2d</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Texture2d &gt; klotter::Assets::get_grass</definition>
        <argsstring>()</argsstring>
        <name>get_grass</name>
        <qualifiedname>klotter::Assets::get_grass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="25" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structklotter_1_1Assets_1a00c23637f1b2b401f37b9b3eb2213645" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structklotter_1_1TextureCubemap" kindref="compound">TextureCubemap</ref> &gt;</type>
        <definition>std::shared_ptr&lt; TextureCubemap &gt; klotter::Assets::get_skybox</definition>
        <argsstring>()</argsstring>
        <name>get_skybox</name>
        <qualifiedname>klotter::Assets::get_skybox</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/assets.h" line="26" column="17"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A temporary collection of assets that can be used in the example. </para>
    </briefdescription>
    <detaileddescription>
<para>This should be replaced with something way better that this yolo crap. </para>
    </detaileddescription>
    <location file="src/klotter/render/assets.h" line="12" column="1" bodyfile="src/klotter/render/assets.h" bodystart="13" bodyend="43"/>
    <listofallmembers>
      <member refid="structklotter_1_1Assets_1af1aff85cf9fe5add568c913256a28012" prot="private" virt="non-virtual"><scope>klotter::Assets</scope><name>black</name></member>
      <member refid="structklotter_1_1Assets_1aabb46305902b797a3fd443d0c53abcc5" prot="private" virt="non-virtual"><scope>klotter::Assets</scope><name>container_diffuse</name></member>
      <member refid="structklotter_1_1Assets_1a1cdac0d028690a6fa60012a704fca38f" prot="private" virt="non-virtual"><scope>klotter::Assets</scope><name>container_specular</name></member>
      <member refid="structklotter_1_1Assets_1a28e98a4085b308402c00672f3d958ac7" prot="private" virt="non-virtual"><scope>klotter::Assets</scope><name>cookie</name></member>
      <member refid="structklotter_1_1Assets_1a6abd2b6c2dbeeadc5dea0254da936fa1" prot="private" virt="non-virtual"><scope>klotter::Assets</scope><name>dark_grid</name></member>
      <member refid="structklotter_1_1Assets_1a6112c8cd85fb6962512f579b71b81cdd" prot="public" virt="non-virtual"><scope>klotter::Assets</scope><name>get_black</name></member>
      <member refid="structklotter_1_1Assets_1a7c2001fd4b33885626d2a62ffd8b8928" prot="public" virt="non-virtual"><scope>klotter::Assets</scope><name>get_container_diffuse</name></member>
      <member refid="structklotter_1_1Assets_1aa8a09bad37aac6b352b2152c838a8a3e" prot="public" virt="non-virtual"><scope>klotter::Assets</scope><name>get_container_specular</name></member>
      <member refid="structklotter_1_1Assets_1a5d3b80eb107e6caf5c8db1addc8a1984" prot="public" virt="non-virtual"><scope>klotter::Assets</scope><name>get_cookie</name></member>
      <member refid="structklotter_1_1Assets_1ad7d8a7897034c43e22e65c5493dd9f67" prot="public" virt="non-virtual"><scope>klotter::Assets</scope><name>get_dark_grid</name></member>
      <member refid="structklotter_1_1Assets_1ae123058dd7cb18ef657cc4e6d99cae91" prot="public" virt="non-virtual"><scope>klotter::Assets</scope><name>get_glass</name></member>
      <member refid="structklotter_1_1Assets_1a20be3e80c53f4d4485176282a4d65e78" prot="public" virt="non-virtual"><scope>klotter::Assets</scope><name>get_grass</name></member>
      <member refid="structklotter_1_1Assets_1ae7b09eec40c2d366af885019880a9537" prot="public" virt="non-virtual"><scope>klotter::Assets</scope><name>get_light_grid</name></member>
      <member refid="structklotter_1_1Assets_1af788dcba6c4f2a6ab7e44c4be2dc8791" prot="public" virt="non-virtual"><scope>klotter::Assets</scope><name>get_matrix</name></member>
      <member refid="structklotter_1_1Assets_1a00c23637f1b2b401f37b9b3eb2213645" prot="public" virt="non-virtual"><scope>klotter::Assets</scope><name>get_skybox</name></member>
      <member refid="structklotter_1_1Assets_1aa72f0833340b8a6bcfee58ae038df747" prot="public" virt="non-virtual"><scope>klotter::Assets</scope><name>get_white</name></member>
      <member refid="structklotter_1_1Assets_1a9cb22e30d9f0eb63daca4867ac554ed5" prot="private" virt="non-virtual"><scope>klotter::Assets</scope><name>glass</name></member>
      <member refid="structklotter_1_1Assets_1a07e22431e1630df85e61f594173ee8d1" prot="private" virt="non-virtual"><scope>klotter::Assets</scope><name>grass</name></member>
      <member refid="structklotter_1_1Assets_1a505f267d48add62d5f7a0db879236f98" prot="private" virt="non-virtual"><scope>klotter::Assets</scope><name>light_grid</name></member>
      <member refid="structklotter_1_1Assets_1a966cd479f977e8f35f5e7e0a88a20999" prot="private" virt="non-virtual"><scope>klotter::Assets</scope><name>matrix</name></member>
      <member refid="structklotter_1_1Assets_1a0115f45f0bbbeeb08a3505838c07010f" prot="private" virt="non-virtual"><scope>klotter::Assets</scope><name>skybox</name></member>
      <member refid="structklotter_1_1Assets_1ab738060dee4ca498eecdeb4a0daa1a41" prot="private" virt="non-virtual"><scope>klotter::Assets</scope><name>white</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
