<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__imguicolors" kind="group">
    <compoundname>imguicolors</compoundname>
    <title>Dear ImGui Colors</title>
    <sectiondef kind="var">
      <memberdef kind="variable" id="group__imguicolors_1gaa9ebfa075a3dfab2438e857c5613eb90" prot="public" static="no" constexpr="yes" mutable="no">
        <type>ImU32</type>
        <definition>ImU32 klotter::imgui::ALPHA</definition>
        <argsstring></argsstring>
        <name>ALPHA</name>
        <qualifiedname>klotter::imgui::ALPHA</qualifiedname>
        <initializer>= 0xff</initializer>
        <briefdescription>
<para>The alpha value for all the colors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/im_colors.h" line="15" column="17" bodyfile="src/klotter/im_colors.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__imguicolors_1ga3bf146ca37035a30171e70de8f9c8e69" prot="public" static="no" constexpr="yes" mutable="no">
        <type>ImU32</type>
        <definition>ImU32 klotter::imgui::white</definition>
        <argsstring></argsstring>
        <name>white</name>
        <qualifiedname>klotter::imgui::white</qualifiedname>
        <initializer>= IM_COL32(0xff, 0xff, 0xff, ALPHA)</initializer>
        <briefdescription>
<para>Pure white. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/im_colors.h" line="18" column="17" bodyfile="src/klotter/im_colors.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__imguicolors_1gaf3a643d856ba4ff26ed17eb6cf9163ed" prot="public" static="no" constexpr="yes" mutable="no">
        <type>ImU32</type>
        <definition>ImU32 klotter::imgui::black</definition>
        <argsstring></argsstring>
        <name>black</name>
        <qualifiedname>klotter::imgui::black</qualifiedname>
        <initializer>= IM_COL32(0x00, 0x00, 0x00, ALPHA)</initializer>
        <briefdescription>
<para>Pure black. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/im_colors.h" line="21" column="17" bodyfile="src/klotter/im_colors.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__imguicolors_1ga6ca10d7a28e2d394c29a470f94ee790f" prot="public" static="no" constexpr="yes" mutable="no">
        <type>std::array&lt; ImU32, 10 &gt;</type>
        <definition>std::array&lt;ImU32, 10&gt; klotter::imgui::gray</definition>
        <argsstring></argsstring>
        <name>gray</name>
        <qualifiedname>klotter::imgui::gray</qualifiedname>
        <initializer>= {IM_COL32(0xf8, 0xf9, 0xfa, ALPHA),
	   IM_COL32(0xf1, 0xf3, 0xf5, ALPHA),
	   IM_COL32(0xe9, 0xec, 0xef, ALPHA),
	   IM_COL32(0xde, 0xe2, 0xe6, ALPHA),
	   IM_COL32(0xce, 0xd4, 0xda, ALPHA),
	   IM_COL32(0xad, 0xb5, 0xbd, ALPHA),
	   IM_COL32(0x86, 0x8e, 0x96, ALPHA),
	   IM_COL32(0x49, 0x50, 0x57, ALPHA),
	   IM_COL32(0x34, 0x3a, 0x40, ALPHA),
	   IM_COL32(0x21, 0x25, 0x29, ALPHA)}</initializer>
        <briefdescription>
<para>First element is the least gray (almost white), last element is the most gray. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/im_colors.h" line="24" column="22" bodyfile="src/klotter/im_colors.h" bodystart="25" bodyend="34"/>
      </memberdef>
      <memberdef kind="variable" id="group__imguicolors_1ga2b7da2e18316f6c2522c96be0d56ada5" prot="public" static="no" constexpr="yes" mutable="no">
        <type>std::array&lt; ImU32, 10 &gt;</type>
        <definition>std::array&lt;ImU32, 10&gt; klotter::imgui::red</definition>
        <argsstring></argsstring>
        <name>red</name>
        <qualifiedname>klotter::imgui::red</qualifiedname>
        <initializer>= {IM_COL32(0xff, 0xf5, 0xf5, ALPHA),
	   IM_COL32(0xff, 0xe3, 0xe3, ALPHA),
	   IM_COL32(0xff, 0xc9, 0xc9, ALPHA),
	   IM_COL32(0xff, 0xa8, 0xa8, ALPHA),
	   IM_COL32(0xff, 0x87, 0x87, ALPHA),
	   IM_COL32(0xff, 0x6b, 0x6b, ALPHA),
	   IM_COL32(0xfa, 0x52, 0x52, ALPHA),
	   IM_COL32(0xf0, 0x3e, 0x3e, ALPHA),
	   IM_COL32(0xe0, 0x31, 0x31, ALPHA),
	   IM_COL32(0xc9, 0x2a, 0x2a, ALPHA)}</initializer>
        <briefdescription>
<para>First element is the least red (almost white), last element is the most red. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/im_colors.h" line="37" column="22" bodyfile="src/klotter/im_colors.h" bodystart="38" bodyend="47"/>
      </memberdef>
      <memberdef kind="variable" id="group__imguicolors_1ga592fc2fda898296f6faeb8f4f8774a79" prot="public" static="no" constexpr="yes" mutable="no">
        <type>std::array&lt; ImU32, 10 &gt;</type>
        <definition>std::array&lt;ImU32, 10&gt; klotter::imgui::pink</definition>
        <argsstring></argsstring>
        <name>pink</name>
        <qualifiedname>klotter::imgui::pink</qualifiedname>
        <initializer>= {IM_COL32(0xff, 0xf0, 0xf6, ALPHA),
	   IM_COL32(0xff, 0xde, 0xeb, ALPHA),
	   IM_COL32(0xfc, 0xc2, 0xd7, ALPHA),
	   IM_COL32(0xfa, 0xa2, 0xc1, ALPHA),
	   IM_COL32(0xf7, 0x83, 0xac, ALPHA),
	   IM_COL32(0xf0, 0x65, 0x95, ALPHA),
	   IM_COL32(0xe6, 0x49, 0x80, ALPHA),
	   IM_COL32(0xd6, 0x33, 0x6c, ALPHA),
	   IM_COL32(0xc2, 0x25, 0x5c, ALPHA),
	   IM_COL32(0xa6, 0x1e, 0x4d, ALPHA)}</initializer>
        <briefdescription>
<para>First element is the least pink (almost white), last element is the most pink. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/im_colors.h" line="50" column="22" bodyfile="src/klotter/im_colors.h" bodystart="51" bodyend="60"/>
      </memberdef>
      <memberdef kind="variable" id="group__imguicolors_1ga64da05bfc2889d48883a33cba2f4192c" prot="public" static="no" constexpr="yes" mutable="no">
        <type>std::array&lt; ImU32, 10 &gt;</type>
        <definition>std::array&lt;ImU32, 10&gt; klotter::imgui::grape</definition>
        <argsstring></argsstring>
        <name>grape</name>
        <qualifiedname>klotter::imgui::grape</qualifiedname>
        <initializer>= {IM_COL32(0xf8, 0xf0, 0xfc, ALPHA),
	   IM_COL32(0xf3, 0xd9, 0xfa, ALPHA),
	   IM_COL32(0xee, 0xbe, 0xfa, ALPHA),
	   IM_COL32(0xe5, 0x99, 0xf7, ALPHA),
	   IM_COL32(0xda, 0x77, 0xf2, ALPHA),
	   IM_COL32(0xcc, 0x5d, 0xe8, ALPHA),
	   IM_COL32(0xbe, 0x4b, 0xdb, ALPHA),
	   IM_COL32(0xae, 0x3e, 0xc9, ALPHA),
	   IM_COL32(0x9c, 0x36, 0xb5, ALPHA),
	   IM_COL32(0x86, 0x2e, 0x9c, ALPHA)}</initializer>
        <briefdescription>
<para>First element is the least grape (almost white), last element is the most grape. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/im_colors.h" line="63" column="22" bodyfile="src/klotter/im_colors.h" bodystart="64" bodyend="73"/>
      </memberdef>
      <memberdef kind="variable" id="group__imguicolors_1gac5bdda2c8e3ff8f790e81e5c992f2296" prot="public" static="no" constexpr="yes" mutable="no">
        <type>std::array&lt; ImU32, 10 &gt;</type>
        <definition>std::array&lt;ImU32, 10&gt; klotter::imgui::violet</definition>
        <argsstring></argsstring>
        <name>violet</name>
        <qualifiedname>klotter::imgui::violet</qualifiedname>
        <initializer>= {IM_COL32(0xf3, 0xf0, 0xff, ALPHA),
	   IM_COL32(0xe5, 0xdb, 0xff, ALPHA),
	   IM_COL32(0xd0, 0xbf, 0xff, ALPHA),
	   IM_COL32(0xb1, 0x97, 0xfc, ALPHA),
	   IM_COL32(0x97, 0x75, 0xfa, ALPHA),
	   IM_COL32(0x84, 0x5e, 0xf7, ALPHA),
	   IM_COL32(0x79, 0x50, 0xf2, ALPHA),
	   IM_COL32(0x70, 0x48, 0xe8, ALPHA),
	   IM_COL32(0x67, 0x41, 0xd9, ALPHA),
	   IM_COL32(0x5f, 0x3d, 0xc4, ALPHA)}</initializer>
        <briefdescription>
<para>First element is the least violet (almost white), last element is the most violet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/im_colors.h" line="76" column="22" bodyfile="src/klotter/im_colors.h" bodystart="77" bodyend="86"/>
      </memberdef>
      <memberdef kind="variable" id="group__imguicolors_1ga7af53378e11ed2f4ec0c2ce54b6be954" prot="public" static="no" constexpr="yes" mutable="no">
        <type>std::array&lt; ImU32, 10 &gt;</type>
        <definition>std::array&lt;ImU32, 10&gt; klotter::imgui::indigo</definition>
        <argsstring></argsstring>
        <name>indigo</name>
        <qualifiedname>klotter::imgui::indigo</qualifiedname>
        <initializer>= {IM_COL32(0xed, 0xf2, 0xff, ALPHA),
	   IM_COL32(0xdb, 0xe4, 0xff, ALPHA),
	   IM_COL32(0xba, 0xc8, 0xff, ALPHA),
	   IM_COL32(0x91, 0xa7, 0xff, ALPHA),
	   IM_COL32(0x74, 0x8f, 0xfc, ALPHA),
	   IM_COL32(0x5c, 0x7c, 0xfa, ALPHA),
	   IM_COL32(0x4c, 0x6e, 0xf5, ALPHA),
	   IM_COL32(0x42, 0x63, 0xeb, ALPHA),
	   IM_COL32(0x3b, 0x5b, 0xdb, ALPHA),
	   IM_COL32(0x36, 0x4f, 0xc7, ALPHA)}</initializer>
        <briefdescription>
<para>First element is the least indigo (almost white), last element is the most indigo. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/im_colors.h" line="89" column="22" bodyfile="src/klotter/im_colors.h" bodystart="90" bodyend="99"/>
      </memberdef>
      <memberdef kind="variable" id="group__imguicolors_1gaf411963d263ef598e8c346f0609e059a" prot="public" static="no" constexpr="yes" mutable="no">
        <type>std::array&lt; ImU32, 10 &gt;</type>
        <definition>std::array&lt;ImU32, 10&gt; klotter::imgui::blue</definition>
        <argsstring></argsstring>
        <name>blue</name>
        <qualifiedname>klotter::imgui::blue</qualifiedname>
        <initializer>= {IM_COL32(0xe7, 0xf5, 0xff, ALPHA),
	   IM_COL32(0xd0, 0xeb, 0xff, ALPHA),
	   IM_COL32(0xa5, 0xd8, 0xff, ALPHA),
	   IM_COL32(0x74, 0xc0, 0xfc, ALPHA),
	   IM_COL32(0x4d, 0xab, 0xf7, ALPHA),
	   IM_COL32(0x33, 0x9a, 0xf0, ALPHA),
	   IM_COL32(0x22, 0x8b, 0xe6, ALPHA),
	   IM_COL32(0x1c, 0x7e, 0xd6, ALPHA),
	   IM_COL32(0x19, 0x71, 0xc2, ALPHA),
	   IM_COL32(0x18, 0x64, 0xab, ALPHA)}</initializer>
        <briefdescription>
<para>First element is the least blue (almost white), last element is the most blue. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/im_colors.h" line="102" column="22" bodyfile="src/klotter/im_colors.h" bodystart="103" bodyend="112"/>
      </memberdef>
      <memberdef kind="variable" id="group__imguicolors_1ga82e168a5311fffe39e9812dd5eff0f9d" prot="public" static="no" constexpr="yes" mutable="no">
        <type>std::array&lt; ImU32, 10 &gt;</type>
        <definition>std::array&lt;ImU32, 10&gt; klotter::imgui::cyan</definition>
        <argsstring></argsstring>
        <name>cyan</name>
        <qualifiedname>klotter::imgui::cyan</qualifiedname>
        <initializer>= {IM_COL32(0xe3, 0xfa, 0xfc, ALPHA),
	   IM_COL32(0xc5, 0xf6, 0xfa, ALPHA),
	   IM_COL32(0x99, 0xe9, 0xf2, ALPHA),
	   IM_COL32(0x66, 0xd9, 0xe8, ALPHA),
	   IM_COL32(0x3b, 0xc9, 0xdb, ALPHA),
	   IM_COL32(0x22, 0xb8, 0xcf, ALPHA),
	   IM_COL32(0x15, 0xaa, 0xbf, ALPHA),
	   IM_COL32(0x10, 0x98, 0xad, ALPHA),
	   IM_COL32(0x0c, 0x85, 0x99, ALPHA),
	   IM_COL32(0x0b, 0x72, 0x85, ALPHA)}</initializer>
        <briefdescription>
<para>First element is the least cyan (almost white), last element is the most cyan. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/im_colors.h" line="115" column="22" bodyfile="src/klotter/im_colors.h" bodystart="116" bodyend="125"/>
      </memberdef>
      <memberdef kind="variable" id="group__imguicolors_1ga3bd6f925dac3f66b4ac6a798ad732e0e" prot="public" static="no" constexpr="yes" mutable="no">
        <type>std::array&lt; ImU32, 10 &gt;</type>
        <definition>std::array&lt;ImU32, 10&gt; klotter::imgui::teal</definition>
        <argsstring></argsstring>
        <name>teal</name>
        <qualifiedname>klotter::imgui::teal</qualifiedname>
        <initializer>= {IM_COL32(0xe6, 0xfc, 0xf5, ALPHA),
	   IM_COL32(0xc3, 0xfa, 0xe8, ALPHA),
	   IM_COL32(0x96, 0xf2, 0xd7, ALPHA),
	   IM_COL32(0x63, 0xe6, 0xbe, ALPHA),
	   IM_COL32(0x38, 0xd9, 0xa9, ALPHA),
	   IM_COL32(0x20, 0xc9, 0x97, ALPHA),
	   IM_COL32(0x12, 0xb8, 0x86, ALPHA),
	   IM_COL32(0x0c, 0xa6, 0x78, ALPHA),
	   IM_COL32(0x09, 0x92, 0x68, ALPHA),
	   IM_COL32(0x08, 0x7f, 0x5b, ALPHA)}</initializer>
        <briefdescription>
<para>First element is the least teal (almost white), last element is the most teal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/im_colors.h" line="128" column="22" bodyfile="src/klotter/im_colors.h" bodystart="129" bodyend="138"/>
      </memberdef>
      <memberdef kind="variable" id="group__imguicolors_1ga9655f89d578b8314d605515fd2e6e945" prot="public" static="no" constexpr="yes" mutable="no">
        <type>std::array&lt; ImU32, 10 &gt;</type>
        <definition>std::array&lt;ImU32, 10&gt; klotter::imgui::green</definition>
        <argsstring></argsstring>
        <name>green</name>
        <qualifiedname>klotter::imgui::green</qualifiedname>
        <initializer>= {IM_COL32(0xeb, 0xfb, 0xee, ALPHA),
	   IM_COL32(0xd3, 0xf9, 0xd8, ALPHA),
	   IM_COL32(0xb2, 0xf2, 0xbb, ALPHA),
	   IM_COL32(0x8c, 0xe9, 0x9a, ALPHA),
	   IM_COL32(0x69, 0xdb, 0x7c, ALPHA),
	   IM_COL32(0x51, 0xcf, 0x66, ALPHA),
	   IM_COL32(0x40, 0xc0, 0x57, ALPHA),
	   IM_COL32(0x37, 0xb2, 0x4d, ALPHA),
	   IM_COL32(0x2f, 0x9e, 0x44, ALPHA),
	   IM_COL32(0x2b, 0x8a, 0x3e, ALPHA)}</initializer>
        <briefdescription>
<para>First element is the least green (almost white), last element is the most green. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/im_colors.h" line="141" column="22" bodyfile="src/klotter/im_colors.h" bodystart="142" bodyend="151"/>
      </memberdef>
      <memberdef kind="variable" id="group__imguicolors_1gacbc316ef8105da66f1d268c14463bd7e" prot="public" static="no" constexpr="yes" mutable="no">
        <type>std::array&lt; ImU32, 10 &gt;</type>
        <definition>std::array&lt;ImU32, 10&gt; klotter::imgui::lime</definition>
        <argsstring></argsstring>
        <name>lime</name>
        <qualifiedname>klotter::imgui::lime</qualifiedname>
        <initializer>= {IM_COL32(0xf4, 0xfc, 0xe3, ALPHA),
	   IM_COL32(0xe9, 0xfa, 0xc8, ALPHA),
	   IM_COL32(0xd8, 0xf5, 0xa2, ALPHA),
	   IM_COL32(0xc0, 0xeb, 0x75, ALPHA),
	   IM_COL32(0xa9, 0xe3, 0x4b, ALPHA),
	   IM_COL32(0x94, 0xd8, 0x2d, ALPHA),
	   IM_COL32(0x82, 0xc9, 0x1e, ALPHA),
	   IM_COL32(0x74, 0xb8, 0x16, ALPHA),
	   IM_COL32(0x66, 0xa8, 0x0f, ALPHA),
	   IM_COL32(0x5c, 0x94, 0x0d, ALPHA)}</initializer>
        <briefdescription>
<para>First element is the least lime (almost white), last element is the most lime. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/im_colors.h" line="154" column="22" bodyfile="src/klotter/im_colors.h" bodystart="155" bodyend="164"/>
      </memberdef>
      <memberdef kind="variable" id="group__imguicolors_1gafc89d904b23312ecdf1aed6cd7b137c1" prot="public" static="no" constexpr="yes" mutable="no">
        <type>std::array&lt; ImU32, 10 &gt;</type>
        <definition>std::array&lt;ImU32, 10&gt; klotter::imgui::yellow</definition>
        <argsstring></argsstring>
        <name>yellow</name>
        <qualifiedname>klotter::imgui::yellow</qualifiedname>
        <initializer>= {IM_COL32(0xff, 0xf9, 0xdb, ALPHA),
	   IM_COL32(0xff, 0xf3, 0xbf, ALPHA),
	   IM_COL32(0xff, 0xec, 0x99, ALPHA),
	   IM_COL32(0xff, 0xe0, 0x66, ALPHA),
	   IM_COL32(0xff, 0xd4, 0x3b, ALPHA),
	   IM_COL32(0xfc, 0xc4, 0x19, ALPHA),
	   IM_COL32(0xfa, 0xb0, 0x05, ALPHA),
	   IM_COL32(0xf5, 0x9f, 0x00, ALPHA),
	   IM_COL32(0xf0, 0x8c, 0x00, ALPHA),
	   IM_COL32(0xe6, 0x77, 0x00, ALPHA)}</initializer>
        <briefdescription>
<para>First element is the least yellow (almost white), last element is the most yellow. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/im_colors.h" line="167" column="22" bodyfile="src/klotter/im_colors.h" bodystart="168" bodyend="177"/>
      </memberdef>
      <memberdef kind="variable" id="group__imguicolors_1gae9f69cc280e1a47e222e63a6be99712a" prot="public" static="no" constexpr="yes" mutable="no">
        <type>std::array&lt; ImU32, 10 &gt;</type>
        <definition>std::array&lt;ImU32, 10&gt; klotter::imgui::orange</definition>
        <argsstring></argsstring>
        <name>orange</name>
        <qualifiedname>klotter::imgui::orange</qualifiedname>
        <initializer>= {IM_COL32(0xff, 0xf4, 0xe6, ALPHA),
	   IM_COL32(0xff, 0xe8, 0xcc, ALPHA),
	   IM_COL32(0xff, 0xd8, 0xa8, ALPHA),
	   IM_COL32(0xff, 0xc0, 0x78, ALPHA),
	   IM_COL32(0xff, 0xa9, 0x4d, ALPHA),
	   IM_COL32(0xff, 0x92, 0x2b, ALPHA),
	   IM_COL32(0xfd, 0x7e, 0x14, ALPHA),
	   IM_COL32(0xf7, 0x67, 0x07, ALPHA),
	   IM_COL32(0xe8, 0x59, 0x0c, ALPHA),
	   IM_COL32(0xd9, 0x48, 0x0f, ALPHA)}</initializer>
        <briefdescription>
<para>First element is the least orange (almost white), last element is the most orange. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/im_colors.h" line="180" column="22" bodyfile="src/klotter/im_colors.h" bodystart="181" bodyend="190"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>This defines &quot;open color&quot; colors for Dear ImGui. </para>
    </briefdescription>
    <detaileddescription>
<para><ulink url="https://yeun.github.io/open-color/">https://yeun.github.io/open-color/</ulink> </para>
    </detaileddescription>
  </compounddef>
</doxygen>
