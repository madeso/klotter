<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__vertex-layout" kind="group">
    <compoundname>vertex-layout</compoundname>
    <title>Vertex layout</title>
    <innerclass refid="structklotter_1_1VertexElementDescription" prot="public">klotter::VertexElementDescription</innerclass>
    <innerclass refid="structklotter_1_1CompiledVertexElement" prot="public">klotter::CompiledVertexElement</innerclass>
    <innerclass refid="structklotter_1_1CompiledVertexElementNoName" prot="public">klotter::CompiledVertexElementNoName</innerclass>
    <innerclass refid="structklotter_1_1CompiledShaderVertexAttributes" prot="public">klotter::CompiledShaderVertexAttributes</innerclass>
    <innerclass refid="structklotter_1_1CompiledGeomVertexAttributes" prot="public">klotter::CompiledGeomVertexAttributes</innerclass>
    <innerclass refid="structklotter_1_1CompiledVertexTypeList" prot="public">klotter::CompiledVertexTypeList</innerclass>
    <innerclass refid="structklotter_1_1InstanceProp" prot="public">klotter::InstanceProp</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__vertex-layout_1gad736ea89c0534627057463235feb9189" prot="public" static="no" strong="yes">
        <type></type>
        <name>VertexType</name>
        <qualifiedname>klotter::VertexType</qualifiedname>
        <enumvalue id="group__vertex-layout_1ggad736ea89c0534627057463235feb9189ad89672577ba90f2913b82fee460953ca" prot="public">
          <name>position2xy</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__vertex-layout_1ggad736ea89c0534627057463235feb9189af6f586f283d00cd73955404d7b7f859a" prot="public">
          <name>position2xz</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__vertex-layout_1ggad736ea89c0534627057463235feb9189ab6876faed120c8b5f3518d8a5af753f7" prot="public">
          <name>position3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__vertex-layout_1ggad736ea89c0534627057463235feb9189a9242975236b4b61786a418b79cd39ac1" prot="public">
          <name>normal3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__vertex-layout_1ggad736ea89c0534627057463235feb9189a79139957320cd67b3fa6be3f429dafc5" prot="public">
          <name>color3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__vertex-layout_1ggad736ea89c0534627057463235feb9189aa2fa857196bdc299240294b055f5c9ee" prot="public">
          <name>color4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__vertex-layout_1ggad736ea89c0534627057463235feb9189ab500aaa6137a6357d8d9c5f5e09165cd" prot="public">
          <name>texture2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__vertex-layout_1ggad736ea89c0534627057463235feb9189a6dacc621672a82305301e95d9c6b020e" prot="public">
          <name>instance_transform</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para><ref refid="structklotter_1_1Vertex" kindref="compound">Vertex</ref> source type, position, normal etc. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>change to include other texture coordinates and custom types that are created from scripts </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/vertex_layout.h" line="16" column="1" bodyfile="src/klotter/render/vertex_layout.h" bodystart="17" bodyend="29"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__vertex-layout_1gab14e38875ed51577f61fbbe750a605ea" prot="public" static="no">
        <type>std::vector&lt; VertexElementDescription &gt;</type>
        <definition>using klotter::ShaderVertexAttributes =  std::vector&lt;VertexElementDescription&gt;</definition>
        <argsstring></argsstring>
        <name>ShaderVertexAttributes</name>
        <qualifiedname>klotter::ShaderVertexAttributes</qualifiedname>
        <briefdescription>
<para>Describes all vertex inputs a shader requires like <computeroutput>[vec3 position, vec3 normal, vec2 uv]</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/vertex_layout.h" line="48" column="1" bodyfile="src/klotter/render/vertex_layout.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__vertex-layout_1gaa3eb81233db95fb693918802ac36cc30" prot="public" static="no">
        <type>std::vector&lt; VertexType &gt;</type>
        <definition>using klotter::VertexTypes =  std::vector&lt;VertexType&gt;</definition>
        <argsstring></argsstring>
        <name>VertexTypes</name>
        <qualifiedname>klotter::VertexTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/vertex_layout.h" line="65" column="1" bodyfile="src/klotter/render/vertex_layout.h" bodystart="65" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__vertex-layout_1gac498a4f9c32fddd6f300437dec2051ad" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool klotter::is_instance_based</definition>
        <argsstring>(VertexType v)</argsstring>
        <name>is_instance_based</name>
        <qualifiedname>klotter::is_instance_based</qualifiedname>
        <param>
          <type>VertexType</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/vertex_layout.h" line="31" column="16" bodyfile="src/klotter/render/vertex_layout.h" bodystart="31" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="group__vertex-layout_1ga237368f15ea9a44ec4b6b7302d44c312" prot="public" static="no" nodiscard="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CompiledShaderVertexAttributes</type>
        <definition>CompiledShaderVertexAttributes klotter::compile_shader_layout</definition>
        <argsstring>(const CompiledVertexTypeList &amp;l, const ShaderVertexAttributes &amp;elements, std::optional&lt; InstanceProp &gt; instance_prop)</argsstring>
        <name>compile_shader_layout</name>
        <qualifiedname>klotter::compile_shader_layout</qualifiedname>
        <param>
          <type>const CompiledVertexTypeList &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const ShaderVertexAttributes &amp;</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>std::optional&lt; InstanceProp &gt;</type>
          <declname>instance_prop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/vertex_layout.h" line="97" column="32" declfile="src/klotter/render/vertex_layout.h" declline="97" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="group__vertex-layout_1gaafa6ccef1474d9837601f1f46c18e10d" prot="public" static="no" nodiscard="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CompiledGeomVertexAttributes</type>
        <definition>CompiledGeomVertexAttributes klotter::get_geom_layout</definition>
        <argsstring>(const CompiledVertexTypeList &amp;l)</argsstring>
        <name>get_geom_layout</name>
        <qualifiedname>klotter::get_geom_layout</qualifiedname>
        <param>
          <type>const CompiledVertexTypeList &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/vertex_layout.h" line="102" column="30" declfile="src/klotter/render/vertex_layout.h" declline="102" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="group__vertex-layout_1gaf098cc3fc06209c4e177a1536d21660c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CompiledVertexTypeList</type>
        <definition>CompiledVertexTypeList klotter::compile_attribute_layouts</definition>
        <argsstring>(const std::vector&lt; VertexType &gt; &amp;base_layout, const std::vector&lt; ShaderVertexAttributes &gt; &amp;descriptions)</argsstring>
        <name>compile_attribute_layouts</name>
        <qualifiedname>klotter::compile_attribute_layouts</qualifiedname>
        <param>
          <type>const std::vector&lt; VertexType &gt; &amp;</type>
          <declname>base_layout</declname>
        </param>
        <param>
          <type>const std::vector&lt; ShaderVertexAttributes &gt; &amp;</type>
          <declname>descriptions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/vertex_layout.h" line="104" column="24" declfile="src/klotter/render/vertex_layout.h" declline="104" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__vertex-layout_1ga32dd8d711a7c3af2bef87c46aa863269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CompiledVertexTypeList</type>
        <definition>CompiledVertexTypeList klotter::compile_attribute_layouts</definition>
        <argsstring>(const std::vector&lt; ShaderVertexAttributes &gt; &amp;descriptions)</argsstring>
        <name>compile_attribute_layouts</name>
        <qualifiedname>klotter::compile_attribute_layouts</qualifiedname>
        <param>
          <type>const std::vector&lt; ShaderVertexAttributes &gt; &amp;</type>
          <declname>descriptions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/render/vertex_layout.h" line="108" column="24" declfile="src/klotter/render/vertex_layout.h" declline="108" declcolumn="24"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
