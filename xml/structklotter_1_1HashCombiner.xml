<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="structklotter_1_1HashCombiner" kind="struct" language="C++" prot="public">
    <compoundname>klotter::HashCombiner</compoundname>
    <includes refid="hash_8h" local="no">hash.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structklotter_1_1HashCombiner_1a26bf8eb600fcab0bb021b3761e8ad8e2" prot="public" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t klotter::HashCombiner::result</definition>
        <argsstring></argsstring>
        <name>result</name>
        <qualifiedname>klotter::HashCombiner::result</qualifiedname>
        <initializer>= 17</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/hash.h" line="32" column="13" bodyfile="src/klotter/hash.h" bodystart="32" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structklotter_1_1HashCombiner_1a65dfeacdc4930769b33d9f68dd509f4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structklotter_1_1HashCombiner" kindref="compound">HashCombiner</ref> &amp;</type>
        <definition>HashCombiner &amp; klotter::HashCombiner::combine</definition>
        <argsstring>(const T &amp;t)</argsstring>
        <name>combine</name>
        <qualifiedname>klotter::HashCombiner::combine</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Combines the hash of the given object with the current result. </para>
        </briefdescription>
        <detaileddescription>
<para>src: <ulink url="https://stackoverflow.com/a/17017281/180307">https://stackoverflow.com/a/17017281/180307</ulink> numbers from: <ulink url="https://stackoverflow.com/a/1646913/180307">https://stackoverflow.com/a/1646913/180307</ulink> <simplesect kind="note"><para>A word of warning, this is (a variation of) the Berstein hash, and because nobody knows why it does well in tests it is not advisable when hashing is critical. See <ulink url="https://github.com/mignon-p/jsw-libs/blob/master/Tutorials/jsw_tut_hashing.md">https://github.com/mignon-p/jsw-libs/blob/master/Tutorials/jsw_tut_hashing.md</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/hash.h" line="43" column="14" bodyfile="src/klotter/hash.h" bodystart="43" bodyend="47"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A utility for combining hash values of multiple objects into a single hash value. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>Do not use when hashing is critical. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="src/klotter/hash.h" line="30" column="1" bodyfile="src/klotter/hash.h" bodystart="31" bodyend="48"/>
    <listofallmembers>
      <member refid="structklotter_1_1HashCombiner_1a65dfeacdc4930769b33d9f68dd509f4a" prot="public" virt="non-virtual"><scope>klotter::HashCombiner</scope><name>combine</name></member>
      <member refid="structklotter_1_1HashCombiner_1a26bf8eb600fcab0bb021b3761e8ad8e2" prot="public" virt="non-virtual"><scope>klotter::HashCombiner</scope><name>result</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
