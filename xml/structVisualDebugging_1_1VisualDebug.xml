<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="structVisualDebugging_1_1VisualDebug" kind="struct" language="C++" prot="public">
    <compoundname>VisualDebugging::VisualDebug</compoundname>
    <includes refid="vdebug_8h" local="no">vdebug.h</includes>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structVisualDebugging_1_1VisualDebug_1a6bf9550d3e88573fa45fb6a9bb831cdc" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>int</type>
        <definition>int VisualDebugging::VisualDebug::DEFAULT_FONT_SIZE</definition>
        <argsstring></argsstring>
        <name>DEFAULT_FONT_SIZE</name>
        <qualifiedname>VisualDebugging::VisualDebug::DEFAULT_FONT_SIZE</qualifiedname>
        <initializer>= 18</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="111" column="22" bodyfile="src/klotter/vdebug.h" bodystart="111" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structVisualDebugging_1_1VisualDebug_1a28233e45b9dadccfaf8028e93a0237fc" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structVisualDebugging_1_1Frame" kindref="compound">Frame</ref> &gt;</type>
        <definition>std::vector&lt;Frame&gt; VisualDebugging::VisualDebug::frames</definition>
        <argsstring></argsstring>
        <name>frames</name>
        <qualifiedname>VisualDebugging::VisualDebug::frames</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="113" column="13" bodyfile="src/klotter/vdebug.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structVisualDebugging_1_1VisualDebug_1abfbddd796ffef58783de6b540560bad5" prot="public" static="no" mutable="no">
        <type><ref refid="structVisualDebugging_1_1Color" kindref="compound">Color</ref></type>
        <definition>Color VisualDebugging::VisualDebug::current_active_color</definition>
        <argsstring></argsstring>
        <name>current_active_color</name>
        <qualifiedname>VisualDebugging::VisualDebug::current_active_color</qualifiedname>
        <initializer>= <ref refid="namespaceVisualDebugging_1_1Colors_1aca2c2af7b16321d48a0ab354820a6757" kindref="member">Colors::white</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="114" column="7" bodyfile="src/klotter/vdebug.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structVisualDebugging_1_1VisualDebug_1a962a08c09793d6a10ae5c51635ac6d5e" prot="public" static="no" mutable="no">
        <type><ref refid="structVisualDebugging_1_1Color" kindref="compound">Color</ref></type>
        <definition>Color VisualDebugging::VisualDebug::current_background_color</definition>
        <argsstring></argsstring>
        <name>current_background_color</name>
        <qualifiedname>VisualDebugging::VisualDebug::current_background_color</qualifiedname>
        <initializer>= <ref refid="namespaceVisualDebugging_1_1Colors_1aca2c2af7b16321d48a0ab354820a6757" kindref="member">Colors::white</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="115" column="7" bodyfile="src/klotter/vdebug.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structVisualDebugging_1_1VisualDebug_1a68ff850d5ff517ecb7dcdbf42ce34a49" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int VisualDebugging::VisualDebug::current_font_size</definition>
        <argsstring></argsstring>
        <name>current_font_size</name>
        <qualifiedname>VisualDebugging::VisualDebug::current_font_size</qualifiedname>
        <initializer>= <ref refid="structVisualDebugging_1_1VisualDebug_1a6bf9550d3e88573fa45fb6a9bb831cdc" kindref="member">DEFAULT_FONT_SIZE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="116" column="5" bodyfile="src/klotter/vdebug.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structVisualDebugging_1_1VisualDebug_1a6413420a1c9dacbf30c78e93587dbbad" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool VisualDebugging::VisualDebug::don_not_show_next_element_when_frame_is_in_background</definition>
        <argsstring></argsstring>
        <name>don_not_show_next_element_when_frame_is_in_background</name>
        <qualifiedname>VisualDebugging::VisualDebug::don_not_show_next_element_when_frame_is_in_background</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="117" column="6" bodyfile="src/klotter/vdebug.h" bodystart="117" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structVisualDebugging_1_1VisualDebug_1a83f7edf19eba77caa312643aab7ecd3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VisualDebugging::VisualDebug::add_artist_to_current_frame</definition>
        <argsstring>(std::unique_ptr&lt; SceneArtist &gt; artist)</argsstring>
        <name>add_artist_to_current_frame</name>
        <qualifiedname>VisualDebugging::VisualDebug::add_artist_to_current_frame</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; <ref refid="structVisualDebugging_1_1SceneArtist" kindref="compound">SceneArtist</ref> &gt;</type>
          <declname>artist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="119" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structVisualDebugging_1_1VisualDebug_1a1af611820977d8a09acb4cb59760f68c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VisualDebugging::VisualDebug::save</definition>
        <argsstring>(const std::string &amp;title)</argsstring>
        <name>save</name>
        <qualifiedname>VisualDebugging::VisualDebug::save</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>Save visual debug data. Call this when finished creating frames. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="122" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structVisualDebugging_1_1VisualDebug_1a403b65816157a73d36970db380a53080" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VisualDebugging::VisualDebug::begin_frame</definition>
        <argsstring>(std::string description=&quot;&quot;, bool keep_in_background=false)</argsstring>
        <name>begin_frame</name>
        <qualifiedname>VisualDebugging::VisualDebug::begin_frame</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>description</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keep_in_background</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Begin a new frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>Description. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keep_in_background</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, this frame will remain in the background when the next frames are drawn, i.e. it won&apos;t be erased. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="127" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structVisualDebugging_1_1VisualDebug_1a54fd94b58325d726fd796a348252a0ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VisualDebugging::VisualDebug::do_not_show_next_element_when_frame_is_in_background</definition>
        <argsstring>()</argsstring>
        <name>do_not_show_next_element_when_frame_is_in_background</name>
        <qualifiedname>VisualDebugging::VisualDebug::do_not_show_next_element_when_frame_is_in_background</qualifiedname>
        <briefdescription>
<para>The next element drawn to the current frame will not be shown when the frame is in the background. </para>
        </briefdescription>
        <detaileddescription>
<para>(Only applicable to frames where keepInBackground is true). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="131" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structVisualDebugging_1_1VisualDebug_1a18081ae51ae0a477dea061a306d93835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VisualDebugging::VisualDebug::set_color</definition>
        <argsstring>(const Color &amp;new_active_color, const Color &amp;new_background_color)</argsstring>
        <name>set_color</name>
        <qualifiedname>VisualDebugging::VisualDebug::set_color</qualifiedname>
        <param>
          <type>const <ref refid="structVisualDebugging_1_1Color" kindref="compound">Color</ref> &amp;</type>
          <declname>new_active_color</declname>
        </param>
        <param>
          <type>const <ref refid="structVisualDebugging_1_1Color" kindref="compound">Color</ref> &amp;</type>
          <declname>new_background_color</declname>
        </param>
        <briefdescription>
<para>Set the active and inactive colors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_active_color</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structVisualDebugging_1_1Color" kindref="compound">Color</ref> to use when frame is active. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_background_color</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structVisualDebugging_1_1Color" kindref="compound">Color</ref> to use when frame is in background (only applies to frames where keepInBackground is true). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="136" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structVisualDebugging_1_1VisualDebug_1a9554532ee31442a86377af01d46290d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VisualDebugging::VisualDebug::set_color</definition>
        <argsstring>(const Color &amp;color)</argsstring>
        <name>set_color</name>
        <qualifiedname>VisualDebugging::VisualDebug::set_color</qualifiedname>
        <param>
          <type>const <ref refid="structVisualDebugging_1_1Color" kindref="compound">Color</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="138" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structVisualDebugging_1_1VisualDebug_1a7c762abe3513b4e391bf91e6952dce09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VisualDebugging::VisualDebug::set_default_font_size</definition>
        <argsstring>(int new_font_size)</argsstring>
        <name>set_default_font_size</name>
        <qualifiedname>VisualDebugging::VisualDebug::set_default_font_size</qualifiedname>
        <param>
          <type>int</type>
          <declname>new_font_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="140" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structVisualDebugging_1_1VisualDebug_1a7ae0711f25ac70249b0fc5b781565c71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VisualDebugging::VisualDebug::reset_default_font_size</definition>
        <argsstring>()</argsstring>
        <name>reset_default_font_size</name>
        <qualifiedname>VisualDebugging::VisualDebug::reset_default_font_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="142" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structVisualDebugging_1_1VisualDebug_1a5d440acd37137a4256d2682333101d03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VisualDebugging::VisualDebug::draw_line_segment_with_label</definition>
        <argsstring>(const glm::vec2 &amp;line_start, const glm::vec2 &amp;line_end, const std::string &amp;text)</argsstring>
        <name>draw_line_segment_with_label</name>
        <qualifiedname>VisualDebugging::VisualDebug::draw_line_segment_with_label</qualifiedname>
        <param>
          <type>const glm::vec2 &amp;</type>
          <declname>line_start</declname>
        </param>
        <param>
          <type>const glm::vec2 &amp;</type>
          <declname>line_end</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="145" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structVisualDebugging_1_1VisualDebug_1aec9e505fb0222c4a7a095956341242bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VisualDebugging::VisualDebug::draw_line</definition>
        <argsstring>(const std::vector&lt; glm::vec2 &gt; &amp;points)</argsstring>
        <name>draw_line</name>
        <qualifiedname>VisualDebugging::VisualDebug::draw_line</qualifiedname>
        <param>
          <type>const std::vector&lt; glm::vec2 &gt; &amp;</type>
          <declname>points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="146" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structVisualDebugging_1_1VisualDebug_1a87628c87cdd61de927bbb07094be330e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VisualDebugging::VisualDebug::draw_point</definition>
        <argsstring>(const glm::vec2 &amp;position, float radius, bool wireframe=false)</argsstring>
        <name>draw_point</name>
        <qualifiedname>VisualDebugging::VisualDebug::draw_point</qualifiedname>
        <param>
          <type>const glm::vec2 &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wireframe</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="147" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structVisualDebugging_1_1VisualDebug_1a7645c9941762b1f560c7058912672d84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VisualDebugging::VisualDebug::draw_points</definition>
        <argsstring>(const std::vector&lt; glm::vec2 &gt; &amp;points, float radius, bool wireframe=false)</argsstring>
        <name>draw_points</name>
        <qualifiedname>VisualDebugging::VisualDebug::draw_points</qualifiedname>
        <param>
          <type>const std::vector&lt; glm::vec2 &gt; &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wireframe</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="148" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structVisualDebugging_1_1VisualDebug_1a1b0dedb27632c574c3e6ad0d8548da6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VisualDebugging::VisualDebug::draw_arrow</definition>
        <argsstring>(const glm::vec2 &amp;start, const glm::vec2 &amp;end, float size)</argsstring>
        <name>draw_arrow</name>
        <qualifiedname>VisualDebugging::VisualDebug::draw_arrow</qualifiedname>
        <param>
          <type>const glm::vec2 &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const glm::vec2 &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>float</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="149" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structVisualDebugging_1_1VisualDebug_1a356fa3d8fff074e55f1399e542d6d154" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VisualDebugging::VisualDebug::draw_plot</definition>
        <argsstring>(const PlotRange &amp;range, const std::vector&lt; float &gt; &amp;values)</argsstring>
        <name>draw_plot</name>
        <qualifiedname>VisualDebugging::VisualDebug::draw_plot</qualifiedname>
        <param>
          <type>const <ref refid="structVisualDebugging_1_1PlotRange" kindref="compound">PlotRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/klotter/vdebug.h" line="150" column="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="9">
        <label>VisualDebugging::Color</label>
        <link refid="structVisualDebugging_1_1Color"/>
      </node>
      <node id="3">
        <label>VisualDebugging::Frame</label>
        <link refid="structVisualDebugging_1_1Frame"/>
        <childnode refid="4" relation="usage">
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>artists</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>VisualDebugging::SceneArtist</label>
        <link refid="structVisualDebugging_1_1SceneArtist"/>
        <childnode refid="9" relation="usage">
          <edgelabel>active_draw_color_</edgelabel>
          <edgelabel>inactive_draw_color_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>VisualDebugging::VisualDebug</label>
        <link refid="structVisualDebugging_1_1VisualDebug"/>
        <childnode refid="2" relation="usage">
          <edgelabel>frames</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>current_active_color</edgelabel>
          <edgelabel>current_background_color</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>std::unique_ptr&lt; VisualDebugging::SceneArtist &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::vector&lt; VisualDebugging::Frame &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::vector&lt; std::unique_ptr&lt; VisualDebugging::SceneArtist &gt; &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/klotter/vdebug.h" line="109" column="1" bodyfile="src/klotter/vdebug.h" bodystart="110" bodyend="151"/>
    <listofallmembers>
      <member refid="structVisualDebugging_1_1VisualDebug_1a83f7edf19eba77caa312643aab7ecd3a" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>add_artist_to_current_frame</name></member>
      <member refid="structVisualDebugging_1_1VisualDebug_1a403b65816157a73d36970db380a53080" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>begin_frame</name></member>
      <member refid="structVisualDebugging_1_1VisualDebug_1abfbddd796ffef58783de6b540560bad5" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>current_active_color</name></member>
      <member refid="structVisualDebugging_1_1VisualDebug_1a962a08c09793d6a10ae5c51635ac6d5e" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>current_background_color</name></member>
      <member refid="structVisualDebugging_1_1VisualDebug_1a68ff850d5ff517ecb7dcdbf42ce34a49" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>current_font_size</name></member>
      <member refid="structVisualDebugging_1_1VisualDebug_1a6bf9550d3e88573fa45fb6a9bb831cdc" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>DEFAULT_FONT_SIZE</name></member>
      <member refid="structVisualDebugging_1_1VisualDebug_1a54fd94b58325d726fd796a348252a0ef" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>do_not_show_next_element_when_frame_is_in_background</name></member>
      <member refid="structVisualDebugging_1_1VisualDebug_1a6413420a1c9dacbf30c78e93587dbbad" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>don_not_show_next_element_when_frame_is_in_background</name></member>
      <member refid="structVisualDebugging_1_1VisualDebug_1a1b0dedb27632c574c3e6ad0d8548da6d" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>draw_arrow</name></member>
      <member refid="structVisualDebugging_1_1VisualDebug_1aec9e505fb0222c4a7a095956341242bc" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>draw_line</name></member>
      <member refid="structVisualDebugging_1_1VisualDebug_1a5d440acd37137a4256d2682333101d03" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>draw_line_segment_with_label</name></member>
      <member refid="structVisualDebugging_1_1VisualDebug_1a356fa3d8fff074e55f1399e542d6d154" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>draw_plot</name></member>
      <member refid="structVisualDebugging_1_1VisualDebug_1a87628c87cdd61de927bbb07094be330e" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>draw_point</name></member>
      <member refid="structVisualDebugging_1_1VisualDebug_1a7645c9941762b1f560c7058912672d84" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>draw_points</name></member>
      <member refid="structVisualDebugging_1_1VisualDebug_1a28233e45b9dadccfaf8028e93a0237fc" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>frames</name></member>
      <member refid="structVisualDebugging_1_1VisualDebug_1a7ae0711f25ac70249b0fc5b781565c71" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>reset_default_font_size</name></member>
      <member refid="structVisualDebugging_1_1VisualDebug_1a1af611820977d8a09acb4cb59760f68c" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>save</name></member>
      <member refid="structVisualDebugging_1_1VisualDebug_1a18081ae51ae0a477dea061a306d93835" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>set_color</name></member>
      <member refid="structVisualDebugging_1_1VisualDebug_1a9554532ee31442a86377af01d46290d1" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>set_color</name></member>
      <member refid="structVisualDebugging_1_1VisualDebug_1a7c762abe3513b4e391bf91e6952dce09" prot="public" virt="non-virtual"><scope>VisualDebugging::VisualDebug</scope><name>set_default_font_size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
